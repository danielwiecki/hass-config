base_variables:
  variables:
    state_on: >
      [[[ 
        if (entity?.attributes?.preset_mode == 'manual') {
            if (entity?.attributes?.temperature > 5) {
                return true;
            }
        }
        return ['on', 'home', 'cool', 'fan_only', 'playing', 'unlocked'].indexOf(!entity || entity.state) !== -1; 
      ]]]
    state: >
      [[[ 
        if (entity?.attributes?.preset_mode == 'manual') {
            if (entity?.attributes?.temperature > 5) {
                return 'on';
            }
        }
        return !entity || entity.state; 
      ]]]
    entity_id: >
      [[[ return !entity || entity.entity_id; ]]]
    entity_picture: >
      [[[ return !entity || entity.attributes.entity_picture; ]]]
    timeout: >
      [[[ return !entity || Date.now() - Date.parse(entity.last_changed); ]]]
    is_youtube: >
      [[[
        let is_youtube = entity?.attributes?.app_id === 'com.google.ios.youtube',
            sensor = this?._config?.triggers_update,
            media_title = entity?.attributes?.media_title,
            watching_title = states[sensor]?.attributes?.title;
        if (is_youtube && media_title === watching_title) {
            return true;
        }
      ]]]
    
base_actions:
  tap_action:
    action: toggle
    haptic: medium
  double_tap_action:
    haptic: success
  hold_action:
    action: block
  
base:
  template:
    - base_variables
    - styles_base
    - base_actions
    - settings
    - tilt
    - extra_styles
  show_state: true
  show_icon: false
  state_display: >
    [[[ 
        if (variables.state === true) {
            return variables.translate_unknown; 
        }
    ]]]

base_small:
  template:
    - base
    - styles_base_small
  show_state: false
  
base_medium:
  template:
    - base_small
    - styles_base_medium
  show_state: false