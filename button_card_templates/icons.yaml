#################################################
#                                               #
#                     ICONS                     #
#                                               #
#################################################

icon_plex:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M7.7.3h34.6c4.1 0 7.4 3.3 7.4 7.4v34.6c0 4.1-3.3 7.4-7.4 7.4H7.7c-4.1 0-7.4-3.3-7.4-7.4V7.7C.3 3.6 3.6.3 7.7.3z" fill="#282a2d"/>
        <path d="M25,7.1H14.6L25,25L14.6,42.9H25L35.4,25L25,7.1z" fill="#e5a00d"/>
      </svg>

icon_volume_down:
  custom_fields:
    icon: >
      <svg viewBox="0 0 16 16">
        <path fill="var(--state-icon-color)" d="M9 4a.5.5 0 0 0-.812-.39L5.825 5.5H3.5A.5.5 0 0 0 3 6v4a.5.5 0 0 0 .5.5h2.325l2.363 1.89A.5.5 0 0 0 9 12V4zm3.025 4a4.486 4.486 0 0 1-1.318 3.182L10 10.475A3.489 3.489 0 0 0 11.025 8 3.49 3.49 0 0 0 10 5.525l.707-.707A4.486 4.486 0 0 1 12.025 8z"/>
      </svg>

icon_volume_up:
  custom_fields:
    icon: >
      <svg viewBox="0 0 16 16">
        <path fill="var(--state-icon-color)" d="M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z"/>
        <path fill="var(--state-icon-color)" d="M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z"/>
        <path fill="var(--state-icon-color)" d="M8.707 11.182A4.486 4.486 0 0 0 10.025 8a4.486 4.486 0 0 0-1.318-3.182L8 5.525A3.489 3.489 0 0 1 9.025 8 3.49 3.49 0 0 1 8 10.475l.707.707zM6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06z"/>
      </svg>

icon_volume_mute:
  custom_fields:
    icon: >
      <svg viewBox="0 0 16 16">
        <path fill="var(--state-icon-color)" d="M6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06zm7.137 2.096a.5.5 0 0 1 0 .708L12.207 8l1.647 1.646a.5.5 0 0 1-.708.708L11.5 8.707l-1.646 1.647a.5.5 0 0 1-.708-.708L10.793 8 9.146 6.354a.5.5 0 1 1 .708-.708L11.5 7.293l1.646-1.647a.5.5 0 0 1 .708 0z"/>
      </svg>

icon_trakt:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path fill="#ED2224" d="M 8.386 40.303 C 12.415 44.711 18.23 47.448 24.691 47.448 C 27.997 47.448 31.114 46.726 33.927 45.433 L 18.572 30.117 L 8.386 40.303 Z" style=""></path>
        <path fill="#ED2224" d="M 18.496 20.843 L 6.866 32.435 L 5.307 30.877 L 17.546 18.639 L 31.836 4.348 C 29.594 3.588 27.199 3.17 24.691 3.17 C 12.453 3.17 2.533 13.09 2.533 25.328 C 2.533 30.307 4.167 34.906 6.98 38.63 L 18.572 27.038 L 19.37 27.798 L 35.979 44.407 C 36.321 44.217 36.625 44.027 36.929 43.799 L 18.572 25.442 L 7.436 36.578 L 5.878 35.02 L 18.572 22.325 L 19.37 23.085 L 38.753 42.431 C 39.057 42.203 39.323 41.937 39.59 41.709 L 18.686 20.805 L 18.496 20.843 Z" style=""></path>
        <path fill="#ED1C24" d="M 41.148 40.15 C 44.682 36.236 46.849 31.029 46.849 25.328 C 46.849 16.434 41.604 8.795 34.079 5.26 L 20.13 19.171 L 41.148 40.15 Z M 25.489 23.2 L 23.931 21.641 L 34.915 10.657 L 36.473 12.216 L 25.489 23.2 Z M 35.903 8.111 L 23.247 20.767 L 21.688 19.209 L 34.345 6.553 L 35.903 8.111 Z" style=""></path>
      </svg>

icon_apple_tv:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25.2 49.7l-13.7-.1c-2.4 0-4.6-.8-6.5-2.2-2-1.6-3.6-3.6-4.3-6.2-.2-1-.2-1.9-.3-3V11.5C.5 7.9 1.9 5 4.8 2.7 6.2 1.6 7.8.8 9.6.5c.5-.1.9-.1 1.4-.1L27.5.3l10.9.1c2.6 0 4.8.8 6.7 2.4 2.1 1.7 3.7 3.9 4.2 6.6l.2 2.4.1 20.5-.1 6.7c-.1 2.2-.9 4.2-2.2 5.9-1.7 2.2-4 3.8-6.8 4.4-.6.1-1.2.2-1.9.2-.1.1-13.4.2-13.4.2zm-4-27.8c-.9-1.2-2.2-1.6-3.7-1.2-.4.1-.8.2-1.2.4-.3.1-.6.1-.8 0-.4-.1-.8-.3-1.2-.4-.3-.1-.7-.1-1-.1-1.5.2-2.4 1.1-3 2.6-.4 1.1-.3 2.2 0 3.5.4 1.5 1 2.9 2.1 4 .5.6 1.2.9 2 .6 1.1-.5 2.2-.5 3.4 0 .8.3 1.5 0 2.1-.6.7-.8 1.1-1.8 1.6-2.8v-.2c-1-.6-1.7-1.4-1.8-2.7-.2-1.4.5-2.4 1.5-3.1zm9.9-1.4c.1.2.1.3.1.4l3.6 9.5c.1.3.3.4.6.4h.7c.6 0 .6 0 .9-.6l3.7-9.4c.1-.1.1-.3.2-.5H39l-2.9 8.3-3.1-8.3-1.9.2zM27.3 18l-1.3.4c-.5.2-.5.2-.6.7v1.4h-1.6l.1 1.4h1.5v5c0 .7.1 1.4.2 2.1.1.5.3 1 .8 1.4.8.6 2.6.7 3.5.2l-.1-1.2h-1.3c-.5 0-.9-.3-1-.8-.1-.3-.2-.6-.2-1v-5.8H30c0-.5.1-1 0-1.4h-2.7V18zm-8.8-.9c-1.9.3-3 2-2.7 3.2 1.4.2 2.9-1.7 2.7-3.2z"/>
      </svg>

icon_spotify:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25 .3C11.4.3.3 11.4.3 25S11.4 49.7 25 49.7 49.7 38.6 49.7 25 38.6.3 25 .3zm11.3 35.6c-.4.7-1.4 1-2.1.5-5.8-3.5-13.1-4.3-21.7-2.4-.8.2-1.7-.3-1.8-1.2-.2-.8.3-1.7 1.2-1.8 9.4-2.2 17.5-1.2 24 2.8.6.5.9 1.4.4 2.1zm3.1-6.7c-.6.9-1.7 1.2-2.6.6-6.6-4.1-16.8-5.3-24.6-2.9a1.96 1.96 0 0 1-2.4-1.3 1.96 1.96 0 0 1 1.3-2.4c9-2.7 20.1-1.4 27.7 3.3.8.6 1.1 1.8.6 2.7h0zm.2-7c-8-4.7-21.1-5.2-28.7-2.9-1.2.4-2.5-.3-2.9-1.5s.3-2.5 1.5-2.9c8.7-2.6 23.2-2.1 32.4 3.3 1.1.7 1.5 2.1.8 3.2-.6 1.1-2 1.4-3.1.8h0z"/>
      </svg>

icon_nest_mini:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M49.7 25c0 13.6-11.1 24.7-24.8 24.7C11.3 49.7.3 38.6.3 25S11.4.3 25 .3 49.7 11.4 49.7 25zm-33.9 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3.1 2.3-.9 2.3-2.2h0zm10.8 0c0 1.2.9 2.2 2.2 2.3 1.3 0 2.3-1 2.3-2.2 0-1.3-1-2.3-2.2-2.3-1.3 0-2.3.9-2.3 2.2zm-3.2 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3 0 2.3-.9 2.3-2.2h0zm13 2.2a2.22 2.22 0 0 0 2.2-2.2c0-1.2-1-2.3-2.2-2.3a2.22 2.22 0 0 0-2.2 2.2c0 1.3 1 2.3 2.2 2.3z" />
      </svg>

icon_play_pause:
  styles:
    custom_fields:
      play_pause:
        - top: -10%
        - right: 0
        - bottom: 0
        - left: 0
        - margin: auto
        - width: 25%
        - height: 25%
        - position: absolute
        - fill: "#dedede"
  custom_fields:
    play_pause: >
      [[[
        let style = `
          <style>
            .scale-up {
              animation: scale-up 1s forwards;
              cubic-bezier(.05, .5, .3, 1);
              transform-origin: center center;
            }
            @keyframes scale-up {
              0% {
                opacity: 0;
                transform: scale(0);
              }
              20% {
                transform: scale(1);
              }
              30% {
                opacity: 1;
              }
              80% {
                opacity: 1;
              }
              100% {
                opacity: 0;
              }
            }
          </style>
        `;
        if (variables.state === 'paused' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 166 166">${style}
                <path class="scale-up" d="M0 0h59.9v166H0zm106.1 0H166v166h-59.9z"/>
              </svg>
            `;
        }
        if (variables.state === 'playing' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 166 166">${style}
                <path class="scale-up" d="M0 0l166 83L0 166z"/>
              </svg>
            `;
        }
      ]]]

icon_hue:
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -14%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="var(--state-icon-color)" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
            <path class="${state} light-color" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/>
          </svg>
        `;
      ]]]

icon_shade:
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -15%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="var(--state-icon-color)" d="M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6 1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z"/>
            <path class="${state} light-color" d="M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4 16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0 15.1-.3 15.9-.3 1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5"/>
          </svg>
        `;
      ]]]

icon_tv:
  styles:
    custom_fields:
      icon:
        - width: 87%
        - margin-top: -8%
        - fill: >
            [[[
              return variables.state_on
                  ? '#616161'
                  : 'var(--state-icon-color)';
            ]]]
  custom_fields:
    icon: >
      [[[
        let style = `
          <style>
            @keyframes on {
              from {
                transform: scaleY(0);
              }
              to {
                transform: scaleY(1);
              }
            }
            .on {
              animation: on 1s;
              transform-origin: -100% 46%;
              animation-fill-mode: forwards;
            }
            @keyframes off {
              from {
                transform: scaleY(1);
              }
              to {
                transform: scaleY(0);
              }
            }
            .off {
              animation: off 1s;
              transform-origin: -100% 46%;
              animation-fill-mode: forwards;
            }
          </style>
        `,
          path = `
            <path d="M46 9.2v27.5H4.1V9.2H46m2.4-2.4H1.6v32.3h46.7c.1 0 .1-32.3.1-32.3zM11.9 43.2h26.3c.6 0 1.1-.4 1.1-1v-.3c0-.6-.4-1.1-1-1.1H11.9c-.6 0-1.1.4-1.1 1v.3a1.11 1.11 0 0 0 1.1 1.1z"/>
          `,
          gradient = `
            <linearGradient id="A" gradientUnits="userSpaceOnUse" x1="5.401" y1="34.714" x2="43.817" y2="11.74">
              <stop offset="0" stop-color="#64acb7"/>
              <stop offset="1" stop-color="#7fdbe9"/>
            </linearGradient>
          `;
        if (variables.state_on && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${style} ${gradient} 
                <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
                <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        }
        if (variables.state_on && variables.timeout > 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${gradient} 
                <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
                <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        }
        if (variables.state === 'off' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${style} ${gradient} 
                <path class="off" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        } else {
            return `
              <svg viewBox="0 0 50 50"> ${style} 
                ${path}
              </svg>
            `;
        }
      ]]]

icon_ps5:
  styles:
    custom_fields:
      icon:
        - width: 89%
        - margin-left: -2%
        - margin-top: -9%
  custom_fields:
    icon: >
      [[[
        if (variables.state_on && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50">
                <style>
                @keyframes on {
                  50% {
                    transform: translateY(-45%);
                  }
                  100% {
                    transform: translateY(0);
                  }
                }
                .on {
                  animation: on 2s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
                }
              </style>
              <g style="clip-path: url(#mask);">
                <g class="on">
                  <path fill="#00aa9e" d="M49.2 38.9l-75.6-25.1v7.4l75.6 25.2z"/>
                  <path fill="#f3c202" d="M49.2 46.4l-75.6-25.2v7.5l75.6 25.1z"/>
                  <path fill="#326db3" d="M49.2 53.8l-75.6-25.1V51l75.6 25.1zm0-22.3L-26.4 6.4v7.4l75.6 25.1z"/>
                </g>
              </g>
              <defs>
                <clipPath id="mask">
                  <path d="M47.5 33.2c-.5-2.2-3.9-3.5-9.1-3.9-3.8-.3-7.5.6-11.1 1.9l-.6.2v-5.7l-5.7.8-4.6 1.6L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 3.3.6 6.2.2 8.9-.7l7.3 4.8L33 41l10.7-4h.1c2.8-1 4-2.5 3.7-3.8zm-31.3 2l-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 7.2-2.7v2.8l-3.2 1.1zm22.5-1.1l-1.9.7-10.2 3.7V36l6.5-2.4 3.8-1.3c4-.9 5.6.5 1.8 1.8z"/>
                </clipPath>
              </defs>
              <path fill="#de0029" d="M26.7 14.6v28.7l-7.3-2.5V7.1l9.3 2.6c6 1.7 9.6 5 9.6 10.7-.1 6.7-3 9.4-8.7 7.6V14.9c-.1-1.6-2.9-1.7-2.9-.3h0z"/>
            </svg>
          `;
        }

        return variables.state_on && variables.timeout > 2000
            ? `
              <svg viewBox="0 0 50 50">
                <path d="M33.1 33.6L26.7 36v-4.5l6.4 2.1h0zM19.4 29l-2.9-1h-.1L6 31.9h-.1-.1l6.3 2.1h.1l7.2-2.7V29zm0 5.1l-3.2 1.1-.3.1 3.5 1.2v-2.4zm17.4.7h0l-10.1 3.7v.4L33 41l10.6-4-6.8-2.2z" fill="#00aa9e" />
                <path d="M19.4 38.5l-.1.1c-2.7.9-5.6 1.3-8.9.7-3.5-.6-8.1-1.1-8.2-3.2-.1-2 1.7-3.4 3.6-4.2l6.3 2.1-1.6.6c-2 .8-.1 2.7 2.1 1.9l3.3-1.2 3.5 1.2v2zm7.3 4.8L33 41l-6.3-2.1v4.4" fill="#f3c202" />
                <path d="M19.4 29l-2.9-1 2.9-1v2zm28.1 4.2c-.5-2.2-3.9-3.5-9.1-3.9-3.8-.3-7.5.6-11.1 1.9l-.6.2h0l6.5 2.1 3.7-1.3c4-.9 5.6.5 1.8 1.8l-1.9.7 6.8 2.2h.1.1c2.8-.9 4-2.4 3.7-3.7z" fill="#326db3" />
                <path d="M26.7 14.6v28.7l-7.3-2.5V7.1l9.3 2.6c6 1.7 9.6 5 9.6 10.7-.1 6.7-3 9.4-8.7 7.6V14.9c-.1-1.6-2.9-1.7-2.9-.3z" fill="#de0029" />
              </svg>`
            : `
              <svg viewBox="0 0 50 50">
                <path fill="var(--state-icon-color)" d="M43.8 37h-.1l-10.6 4-4.2 1.6v-4.9l8-2.9 1.9-.7c3.8-1.3 2.2-2.7-1.8-1.9l-3.8 1.3-4.3 1.6v-4.5c3.1-1 6.3-1.6 9.5-1.4 5.3.4 8.7 1.6 9.1 3.9.3 1.4-.9 2.9-3.7 3.9zm-26.7-2.1l-.9.3-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 5-1.9v-4.2l-.6.2L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 2.4.4 4.6.3 6.7-.1v-4.3zm12.4-20V28c5.7 1.7 8.7-.9 8.7-7.6.1-5.7-3.6-9-9.6-10.7l-9.3-2.6v33.8l7.2 2.5.1.1V14.6c.1-1.4 2.9-1.3 2.9.3z"/>
              </svg>`;
      ]]]

icon_spot:
  styles:
    custom_fields:
      icon:
        - width: 74%
        - margin-left: -8%
        - margin-top: 3%
  custom_fields:
    icon: >
      [[[
        let state;
        if (variables.state_on && variables.timeout < 2000) {
            state = 'on';
        } 
        if (variables.state === 'off' && variables.timeout < 2000) {
            state = 'off';
        }
        if (variables.state_on && variables.timeout > 2000) {
            state = 'on_timeout';
        }
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                }
                70% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                75% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                88% {
                  transform: rotateZ(-11deg);
                }
                100% {
                  transform: rotateZ(-15deg);
                }
              }
              @keyframes off {
                0% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                }
                70% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                75% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                88% {
                  transform: rotateZ(-4deg);
                }
                100% {
                  transform: rotateZ(0deg);
                }
              }
              .on {
                animation: on 0.7s;
                transform-origin: 40% 20%;
                animation-fill-mode: forwards;
                animation-delay: -0.1s;
              }
              .off {
                animation: off 0.7s;
                transform-origin: 40% 20%;
                animation-fill-mode: forwards;
              }
              .on_timeout {
                transform: rotateZ(-15deg);
                transform-origin: 40% 20%;
              }
            </style>
            <path style="clip-path: url(#mask);" fill="var(--state-icon-color)" d="M40.5.8H17.1c-.1 0-.1 0-.1.1A3.12 3.12 0 0 0 20.1 4h6.1c.1 0 .1 0 .1.1v7.4L18 19.1l3.6 3.5 9.1-8.6c.4-.4.6-1 .7-1.6V4c0-.1 0-.1.1-.1h6c1.7.1 3.1-1.3 3-3.1z"/>
            <defs>
              <clipPath id="mask">
                <path class="${state}" d="M0 9.1h24l8.3 8.8H50V-9H0z"/>
              </clipPath>
            </defs>
            <path class="${state} light-color" d="M25.5 46.4s1.4.5 10.4-8.2c.5-.4 6.3-6.3 5.8-7.1-.7-.8-18.6-19.5-18.6-19.5s-.6-.9-8.6 6.4c-.6.5-8.7 8-7.7 9.1l18.7 19.3z"/>
          </svg>
        `;
      ]]]

icon_imac:
  styles:
    custom_fields:
      icon:
        - width: 80%
        - margin-left: 1%
        - margin-top: -5%
        - fill: >
            [[[ return variables.state_on ? '#72757c' : 'var(--state-icon-color)'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000
            ? 'on'
            : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                from {
                  opacity: 0.5;
                  transform: scale(0.6);
                }
                100% {
                  opacity: 1;
                }
              }
              .on {
                animation: on 0.8s cubic-bezier(0.25, 1, 0.5, 1);
                transform-origin: center;
              }
            </style>
            <path class="${state}" d="M31.9 44.5c-1-.3-1.9.4-1.9-3.7h-9.9c0 4.2-.9 3.4-1.9 3.7s-.2.7-.2.7h14.1s.8-.3-.2-.7zM47.6 4.8H2.5c-1.1 0-2 .9-2 2v30.1c0 1.1.9 2 2 2h45c1.1 0 2-.9 2-2v-30a1.95 1.95 0 0 0-1.9-2.1zm-.7 26.4H3.2V7.6H47v23.6z"/>
          </svg>
        `;
      ]]]

icon_monitors:
  styles:
    custom_fields:
      icon:
        - width: 73%
        - margin-left: -9%
  custom_fields:
    icon: >
      [[[
        let style = `
          <style>
            @keyframes cone {
              35% {
                transform: scale(0.8);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              36% {
                transform: translateY(0%);
              }
              49% {
                transform: scale(1.25);
              }
              63% {
                transform: scale(0.85);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              77% {
                transform: scale(1.15);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              95% {
                transform: scale(1);
              }
            }
            .cone {
              animation: cone 1.2s;
              transform-origin: center;
            }
            @keyframes speaker {
              0% {
                transform: scale(1);
              }
              40% {
                transform: scale(1);
              }
              49% {
                transform: scale(0.95);
              }
              63% {
                transform: scale(1);
              }
              77% {
                transform: scale(0.95);
              }
              100% {
                transform: scale(1);
              }
            }
            .speaker {
              animation: speaker 1.3s;
              transform-origin: center;
            }
          </style>
        `,
          paths = `
            <g class="speaker">
              <path fill="#686868" d="M35.8 46.9H14.2c-1.1 0-2-1-2-2.3V6.7c0-1.3.9-2.3 2-2.3h21.5c1.1 0 2 1 2 2.3v37.9c0 1.2-.9 2.3-1.9 2.3z"/>
              <path fill="#2a2a2a" d="M39.2 1H10.8C9.4 1 8.3 2.1 8.2 3.5v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3c1.4 0 2.5-1.2 2.6-2.6V3.5c0-1.4-1.1-2.5-2.5-2.5zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4C22.5 8 23.6 7 25 7zm10.2 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6s-.1-1.1-.4-1.9.6-.9.6-.9h19.3c0-.1.8-.1.5.9z"/>
            </g>
            <path class="cone" fill="#e5dd00" d="M25 15.7c-6.2 0-11.3 5.1-11.3 11.3S18.8 38.3 25 38.3 36.3 33.2 36.3 27c-.1-6.3-5.1-11.3-11.3-11.3zm0 14.5a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c-.1 1.9-1.5 3.3-3.3 3.3z"/>
          `;
        if (variables.state_on && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50">
                ${style}
                ${paths}
              </svg>
            `;
        }

        return variables.state_on && variables.timeout > 2000
            ? `
              <svg viewBox="0 0 50 50">
                ${paths}
              </svg>
            `
            : `
              <svg viewBox="0 0 50 50">
                <path fill="var(--state-icon-color)" d="M25 18.6c-4.6 0-8.4 3.8-8.4 8.4s3.8 8.4 8.4 8.4 8.4-3.8 8.4-8.4-3.7-8.4-8.4-8.4zm0 11.7a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c0 1.8-1.4 3.3-3.3 3.3zM39.2 1H10.9C9.4 1 8.3 2.1 8.3 3.6v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3a2.65 2.65 0 0 0 2.6-2.6v-43C41.7 2 40.5.9 39.2 1zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4S23.7 7 25 7zm10.3 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6l-.4-1.9c-.2-.9.6-.9.6-.9h19.3s.9.1.6.9zM25 38.2c-6.2 0-11.3-5.1-11.3-11.3a11.29 11.29 0 1 1 22.6 0c.1 6.3-5 11.3-11.3 11.3z"/>
              </svg>
            `;
      ]]]

icon_ceiling_light:
  styles:
    custom_fields:
      icon:
        - width: 100%
        - margin-left: -14%
        - margin-top: -14%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : null;
        return `
          <svg viewBox="0 0 24 24">
            <style>
              @keyframes animate {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: animate 0.8s; 
                transform-origin: center;
              }
            </style>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
              <path fill="var(--state-icon-color)" d="M8,9H11V4H13V9H16L20,17H4L8,9M14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18H14Z" />
            </svg>
            <path class="${state} light-color" d="m 8,9 c 8,0 0.7559689,0 8,0 l 4,8 H 4 L 8,9"/>
          </svg>`;
      ]]]

icon_lamp:
  styles:
    custom_fields:
      icon:
        - width: 79%
        - margin-left: -16%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="var(--state-icon-color)" d="M26.5 21.8l3.8-6.1H19.7l3.8 6.1c-5 .7-6.3 5.8-5.7 10.2.7 5.1 3.2 10.1 5.7 14.4H19v2.5h11.8v-2.5h-4.5C29 42 31.4 37 32.1 32c.6-4.4-.6-9.4-5.6-10.2zm3.1 9.1c-.3 4.3-2.3 8.7-4.4 12.4l-.2.1v.1-.1c-1.8-3-3.3-6.4-4.1-9.7-.7-3.1-1-7.2 2.7-8.4 1.4-.5 3.1-.1 4.2.8 1.6 1 1.8 3 1.8 4.8z"/>
            <path class="${state} light-color" d="M38.1 20L35.7 3.8c-.3-1.9-.4-1.7-.6-2-.9-.6-2.3-.7-2.3-.7H17.4s-1.4 0-2.3.7c-.2.3-.3.1-.6 2C14 5.7 11.9 20 11.9 20s5.8.3 13.4.3h0c7.3 0 12.8-.3 12.8-.3z"/>
          </svg>
        `;
      ]]]

icon_climate:
  styles:
    custom_fields:
      icon:
        - width: 78%
        - margin-left: -10%
        - fill: >
            [[[ return variables.state === 'cool' || variables.state === 'fan_only' ? '#5daeea' : 'var(--state-icon-color)'; ]]]
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M36.8 1.2v1.7a5.34 5.34 0 0 1-5.3 5.3H18.4a5.34 5.34 0 0 1-5.3-5.3V1.2c-2.6.4-4.7 2.8-4.7 5.6v36.5c0 3.1 2.6 5.7 5.7 5.7h21.8c3.1 0 5.7-2.6 5.7-5.7V6.8c0-2.8-2.1-5.2-4.8-5.6zm-1.7 35.6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3c-.4.2-.8.4-1.4.6-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zM15.7 1.9v-.8h18.6V3c0 1.5-1.2 2.8-2.8 2.8H18.4c-1.5 0-2.8-1.2-2.8-2.8V1.9z"/>
      </svg>

icon_bathroom:
  styles:
    custom_fields:
      icon:
        - width: 78%
        - margin-left: -10%
  custom_fields:
    icon: >
      [[[
        let state;
        if (variables.state_on && variables.timeout < 2000) {
          state = 'on';
        } 
        if (variables.state === 'off' && variables.timeout < 2000) {
          state = 'off';
        }
        if (variables.state_on && variables.timeout > 2000) {
          state = 'on_timeout';
        }
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: rotateZ(0deg) translate(0%, 0%);
                }
                100% {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                }
              }
              @keyframes off {
                0% {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                }
                45% {
                  transform: rotateZ(-40deg);
                }
                55% {
                  transform: rotateZ(0deg);
                }
                65% {
                  transform: rotateZ(-15deg);
                }
                75% {
                  transform: rotateZ(0deg);
                }
                85% {
                  transform: rotateZ(-5deg);
                }
                95% {
                  transform: rotateZ(0deg);
                }
              }
              .on {
                animation: on 0.45s;
                animation-fill-mode: forwards;
                transform-origin: 45% 41%;
                transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);
              }
              .on_timeout {
                transform: rotateZ(-90deg) translate(-1.5%, 0%);
                transform-origin: 45% 41%;
              }
              .off {
                animation: off 1.1s linear;
                animation-delay: 0.05s;
                animation-fill-mode: both;
                transform-origin: 45% 41%;
              }
            </style>
            <g class="light-color">
              <path d="M12.9 1.2h2.5c1.6 0 2.9 1.3 2.9 2.9v18.6c0 1.4 1.1 2.5 2.4 2.5h20.5c.5 0 1 .4.9 1-.1 2.6-1.2 9.6-10.2 11v7.6c0 .2.2.4.4.4h1.5a1.58 1.58 0 0 1 1.6 1.6v.3a1.58 1.58 0 0 1-1.6 1.6H11a1.58 1.58 0 0 1-1.6-1.6v-.3a1.58 1.58 0 0 1 1.6-1.6h1.6c.2 0 .4-.2.4-.4v-7.6s-5.2-.3-5.2-5.9V4.2c0-1.6 1.3-2.9 2.9-2.9l2.2-.1c0 .1 0 0 0 0z"/>
              <path class="${state}" d="M22.3 18.8h18.3a1.58 1.58 0 0 1 1.6 1.6v.6a1.58 1.58 0 0 1-1.6 1.6h-19c-.4 0-.7-.3-.8-.7v-2.3c0-.4.3-.7.7-.8h.8z"/>
            </g>
          </svg>
        `;
      ]]]

icon_fan2:
  styles:
    custom_fields:
      icon:
        - width: 75%
        - margin-left: -3%
  custom_fields:
    icon: >
      [[[
        let path = `
          <circle cx="25" cy="25" r="6.6"/>
          <path d="M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z"/>
        `,
        style = `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes rotate {
                0% {
                  visibility: visible;
                  transform: rotate(0deg) translateZ(0);
                }
                100% {
                  transform: rotate(1080deg) translateZ(0);
                }
              }
              .start {
                animation: rotate 2.8s ease-in;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .on {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                animation-delay: 2.8s;
                visibility: hidden;
                will-change: transform;
              }
              .end {
                animation: rotate 2.8s;
                transform-origin: center;
                fill: #9ca2a5;
                animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
                will-change: transform;
              }
              .start_timeout {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .end_timeout {
                fill: #9ca2a5;
              }
            </style>
        `;
        if (variables.state_on && variables.timeout < 2000) {
          return `${style}<g class="start">${path}</g><g class="on">${path}</g></svg>`;
        }
        if (variables.state === 'off' && variables.timeout < 2000) {
          return `${style}<g class="end">${path}</g></svg>`;
        }
        if (variables.state_on && variables.timeout > 2000) {
          return `${style}<g class="start_timeout">${path}</g></svg>`;
        } else {
          return `${style}<g class="end_timeout">${path}</g></svg>`;
        }
      ]]]

icon_energy:
  styles:
    custom_fields:
      icon:
        - top: -0.5%
        - right: 0
        - bottom: 0
        - left: 0
        - margin: auto
        - width: 45%
        - height: 45%
        - position: absolute
        - fill: "#dedede"
  custom_fields:
    icon: >
      [[[
        return `
          <style>
            @keyframes circle {
              0% {
                transform: scale(1);
              }
              20% {
                transform: scale(1.1);
              }
              40% {
                transform: scale(1);
              }
              70% {
                transform: scale(1.2);
              }
              90% {
                transform: scale(1);
              }
              100% {
                transform: scale(1);
              }
            }
            .circle {
              animation: circle 5s infinite;
              transform-origin: center;
            }
          </style>
          <svg class="circle" viewBox="0 0 50 50">
            <circle cx="24.872" cy="24.834" r="14.614" fill="#013668" />
            <path fill="#ffb300" d="M 36.197 7.069 L 19.39 21.198 L 22.949 22.148 L 17.53 27.367 L 22.172 28.608 L 13.554 42.599 L 29.43 27.589 L 25.58 26.562 L 31.048 21.141 L 26.904 20.031 L 36.197 7.069 Z" />
            <path fill="none" d="M 1.188 1.15 L 48.563 1.15 L 48.563 48.525 L 1.188 48.525 L 1.188 1.15 Z" />
          </svg>
        `;
      ]]]

icon_heater:
  styles:
    custom_fields:
      icon:
        - width: 77%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : 'off';
        return `
          <svg viewBox="0 0 50 50">
            <style>
              .on.fin-1 {
                fill: rgb(245, 186, 69);
              }
              .on.fin-2 {
                fill: rgb(254, 205, 87);
              }
              .off.fin-1 {
                fill: #B2B4B5;
              }
              .off.fin-2 {
                fill: var(--state-icon-color);
              }
              .on.line {
                stroke-width: 2;
                stroke: #BD1E2B;
                animation: dash 2s linear forwards infinite;
              }
              @keyframes dash {
                to {
                  stroke-dashoffset: 0;
                  opacity: 0%;
                }
              }
            </style>

            <path style="fill: rgb(229, 232, 236);" d="M 3.813 21.402 L 1.802 21.402 C 1.246 21.402 0.796 21.852 0.796 22.407 C 0.796 22.963 1.246 23.414 1.802 23.414 L 3.813 23.414 C 4.369 23.414 4.819 22.963 4.819 22.407 C 4.819 21.851 4.369 21.402 3.813 21.402 Z"/>
            <path style="fill: var(--state-icon-color);" d="M 7.836 18.384 L 3.813 18.384 C 3.258 18.384 2.809 18.835 2.809 19.39 L 2.809 25.426 C 2.809 25.98 3.258 26.43 3.813 26.43 L 7.836 26.43 C 8.392 26.43 8.843 25.98 8.843 25.426 L 8.843 19.39 C 8.843 18.834 8.392 18.384 7.836 18.384 Z"/>
            <path style="fill: rgb(229, 232, 236);" d="M 48.07 12.35 C 47.512 12.35 47.061 12.8 47.061 13.356 L 47.061 21.402 L 44.044 21.402 C 43.489 21.402 43.04 21.852 43.04 22.407 C 43.04 22.963 43.489 23.414 44.044 23.414 L 48.07 23.414 C 48.623 23.414 49.074 22.963 49.074 22.407 L 49.074 13.356 C 49.074 12.8 48.623 12.35 48.07 12.35 Z"/>
            <path class="${state} fin-1" d="M 10.854 16.373 C 9.188 16.373 7.836 17.725 7.836 19.39 L 7.836 45.54 C 7.836 47.208 9.188 48.557 10.854 48.557 C 12.52 48.557 13.872 47.208 13.872 45.54 L 13.872 19.39 C 13.872 17.725 12.52 16.373 10.854 16.373 Z"/>
            <path class="${state} fin-2" d="M 16.889 16.373 C 15.222 16.373 13.872 17.725 13.872 19.39 L 13.872 45.54 C 13.872 47.208 15.222 48.557 16.889 48.557 C 18.556 48.557 19.906 47.208 19.906 45.54 L 19.906 19.39 C 19.906 17.725 18.556 16.373 16.889 16.373 Z"/>
            <path class="${state} fin-1" d="M 22.923 16.373 C 21.257 16.373 19.906 17.725 19.906 19.39 L 19.906 45.54 C 19.906 47.208 21.257 48.557 22.923 48.557 C 24.59 48.557 25.94 47.208 25.94 45.54 L 25.94 19.39 C 25.94 17.725 24.59 16.373 22.923 16.373 Z"/>
            <path class="${state} fin-2" d="M 28.957 16.373 C 27.293 16.373 25.94 17.725 25.94 19.39 L 25.94 45.54 C 25.94 47.208 27.293 48.557 28.957 48.557 C 30.625 48.557 31.974 47.208 31.974 45.54 L 31.974 19.39 C 31.974 17.725 30.625 16.373 28.957 16.373 Z"/>
            <path class="${state} fin-1" d="M 34.992 16.373 C 33.327 16.373 31.974 17.725 31.974 19.39 L 31.974 45.54 C 31.974 47.208 33.327 48.557 34.992 48.557 C 36.66 48.557 38.009 47.208 38.009 45.54 L 38.009 19.39 C 38.009 17.725 36.66 16.373 34.992 16.373 Z"/>
            <path class="${state} fin-2" d="M 41.027 16.373 C 39.361 16.373 38.009 17.725 38.009 19.39 L 38.009 45.54 C 38.009 47.208 39.361 48.557 41.027 48.557 C 42.695 48.557 44.044 47.208 44.044 45.54 L 44.044 19.39 C 44.044 17.725 42.695 16.373 41.027 16.373 Z"/>
            <path class="${state} line" stroke-dasharray="12.9" stroke-dashoffset="12.9" fill="none" stroke-miterlimit="10" d="M 19.296 7.743 C 19.296 7.743 20.479 7.037 21.144 7.056 C 21.811 7.076 22.412 7.527 23.053 7.514 C 23.695 7.501 23.917 7.412 24.287 7.29 C 24.656 7.167 25.289 6.953 25.583 6.96 C 25.875 6.966 26.223 7.102 26.603 7.302 C 26.986 7.503 27.224 7.53 27.433 7.529 C 27.642 7.528 27.963 7.541 28.579 7.243 C 29.194 6.946 29.428 6.936 29.612 6.936 C 29.797 6.936 31.191 7.201 31.745 7.164" style="" transform="matrix(0, -1.000003, 0.999997, 0, 18.181024, 32.860084)"/>
            <path class="${state} line" stroke-dasharray="7.2" stroke-dashoffset="7.2" fill="none" stroke-miterlimit="10" d="M 29.681 9.855 C 29.681 9.855 30.334 9.411 30.701 9.423 C 31.069 9.435 31.401 9.719 31.755 9.711 C 32.11 9.703 32.232 9.647 32.437 9.57 C 32.64 9.493 32.99 9.358 33.152 9.362 C 33.313 9.366 33.505 9.452 33.715 9.577 C 33.927 9.704 34.058 9.721 34.173 9.72 C 34.289 9.72 34.466 9.728 34.806 9.54 C 35.146 9.354 35.275 9.347 35.376 9.347 C 35.479 9.347 36.248 9.514 36.554 9.491" style="" transform="matrix(0, -1.000003, 0.999997, 0, 23.516532, 42.718609)"/>
            <path class="${state} line" stroke-dasharray="7.2" stroke-dashoffset="7.2" fill="none" stroke-miterlimit="10" d="M 15.066 9.813 C 15.066 9.813 15.719 9.369 16.086 9.381 C 16.454 9.393 16.786 9.677 17.14 9.669 C 17.495 9.661 17.617 9.605 17.822 9.528 C 18.025 9.451 18.375 9.316 18.537 9.32 C 18.698 9.324 18.89 9.41 19.1 9.535 C 19.312 9.662 19.443 9.679 19.558 9.678 C 19.674 9.678 19.851 9.686 20.191 9.498 C 20.531 9.312 20.66 9.305 20.761 9.305 C 20.864 9.305 21.633 9.472 21.939 9.449" style="" transform="matrix(0, -1.000003, 0.999997, 0, 8.943531, 28.061561)"/>
          </svg>
        `;
      ]]]

icon_leaf:
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : 'off';
        return `
          <svg viewBox="0 0 50 50">
            <style>
              .on {
                fill: #3a7f0d;
              }
              .on-light {
                fill: #49a010;
              }
            </style>

            <path class="${state}" fill="var(--state-icon-color)" d="M33.1.882s4.24 10.374-13.932 17.341C9.293 22.006 1.71 31.709 10.764 46.694c.751-6.698 3.967-21.467 17.793-24.837 0 0-12.868 4.812-14.006 26.595 6.613.928 22.122 1.552 26.727-11.906C47.358 18.763 33.1.882 33.1.882z"/>
            <path class="${state}-light" fill="var(--state-icon-color)" d="M14.558 48.361c14.037-5.603 24.253-18.728 25.662-34.396C37.35 6.223 33.1.882 33.1.882s4.24 10.374-13.932 17.341C9.293 22.006 1.71 31.709 10.764 46.694c.751-6.698 3.967-21.467 17.793-24.837 0 0-12.832 4.8-13.999 26.504z"/>
            <circle class="${state}" fill="var(--state-icon-color)" cx="9.364" cy="17.256" r="1.313"/>
            <g class="${state}-light" fill="var(--state-icon-color)" transform="matrix(.095205 0 0 .095205 .752912 .881446)">
              <circle cx="133.782" cy="158.2" r="9.846"/>
              <circle cx="124.921" cy="64.662" r="24.615"/>
              <circle cx="200.736" cy="120.785" r="7.877"/>
              <circle cx="266.713" cy="76.477" r="22.646"/>
            </g>
          </svg>
        `;
      ]]]

icon_flame:
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : 'off';
        return `
          <svg viewBox="0 0 50 50">
            <style>
              .on {
                fill: #e17a2d;
              }
              .on-light {
                fill: #f4e028;
              }
              .on-lighter {
                fill: #fff;
              }
            </style>

            <g transform="matrix(.123782 0 0 .123782 -5.174067 -4.713891)">
              <path class="${state}" fill="var(--state-icon-color)" d="M186.141 168.802c18.63-48.445 15.042-121.667 15.042-121.667s49.541 20.759 83.744 77.761c32.149 53.578 1.777 133.398 1.777 133.398 23.685-23.693 32.464-47.382 33.268-75.827 26.608 42.473 47.165 91.146 47.165 140.398 0 60.938-55.412 110.285-123.837 110.318-68.396-.037-123.837-49.38-123.837-110.318 0-59.31 44.71-96.934 66.678-154.063z"/>
              <g opacity=".8">
                <path class="${state}-light" fill="var(--state-icon-color)" d="M210.455 272.583c10.222-29.384 8.258-73.791 8.258-73.791s98.12 74.674 91.131 167.227c-2.791 36.856-30.424 66.888-68.01 66.91-37.556-.022-68.003-29.949-68.003-66.91.004-35.97 24.557-58.787 36.624-93.436z"/>
              </g>
              <g opacity=".8">
                <path class="${state}-lighter" fill="var(--state-icon-color)" d="M222.017 330.072c6.481-18.619 5.231-46.753 5.231-46.753s62.169 47.318 57.743 105.963c-1.77 23.349-19.278 42.372-43.09 42.39-23.794-.019-43.09-18.978-43.09-42.39.004-22.799 15.569-37.257 23.206-59.21z"/>
              </g>
            </g>
          </svg>
        `;
      ]]]

icon_snowflake:
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : 'off';
        return `
          <svg viewBox="0 0 50 50">
            <style>
              .on {
                fill: #75d6ff;
              }
            </style>

            <path class="${state}" fill="var(--state-icon-color)" d="M47.31 23.856h-5.462l3.325-3.324c.475-.475.475-1.188 0-1.663s-1.187-.475-1.662 0l-4.987 4.987h-3.721l1.979-1.979c.475-.475.475-1.187 0-1.662s-1.187-.475-1.662 0l-3.642 3.641h-3.799l7.124-7.124h7.045a1.22 1.22 0 0 0 1.188-1.187 1.22 1.22 0 0 0-1.188-1.188h-4.67l4.354-4.353c.475-.475.475-1.188 0-1.663s-1.188-.475-1.663 0l-4.354 4.354v-4.67c-.079-.713-.554-1.188-1.266-1.188s-1.187.554-1.187 1.188v7.045l-7.125 7.124v-3.8l3.642-3.641c.474-.475.474-1.187 0-1.662s-1.188-.475-1.663 0l-1.979 1.979v-3.721l4.987-4.987c.475-.475.475-1.187 0-1.662s-1.187-.475-1.662 0l-3.325 3.325V2.483a1.22 1.22 0 0 0-1.187-1.187 1.22 1.22 0 0 0-1.188 1.187v5.462l-3.324-3.324c-.475-.475-1.188-.475-1.663 0s-.475 1.187 0 1.662l4.987 4.987v3.721l-1.979-1.979c-.475-.475-1.187-.475-1.662 0s-.475 1.187 0 1.662l3.641 3.641v3.8l-7.124-7.124V7.945c0-.633-.554-1.108-1.187-1.108a1.22 1.22 0 0 0-1.188 1.188v4.67L9.71 8.341c-.475-.475-1.188-.475-1.663 0s-.475 1.188 0 1.663l4.354 4.353h-4.67c-.713 0-1.188.475-1.188 1.188s.554 1.187 1.188 1.187h7.045l7.124 7.124h-3.8l-3.641-3.641c-.475-.475-1.187-.475-1.662 0s-.475 1.187 0 1.662l1.979 1.979h-3.721l-4.987-4.987c-.475-.475-1.187-.475-1.662 0s-.475 1.188 0 1.663l3.325 3.324H2.189a1.22 1.22 0 0 0-1.187 1.188 1.22 1.22 0 0 0 1.187 1.187h5.462l-3.324 3.325c-.475.475-.475 1.187 0 1.662.237.238.554.317.87.317s.634-.079.871-.317l4.987-4.987h3.721l-2.058 1.979c-.475.475-.475 1.188 0 1.663.237.237.554.316.87.316s.634-.079.871-.316l3.641-3.642h3.8l-7.124 7.125H7.731c-.713 0-1.188.554-1.188 1.187a1.22 1.22 0 0 0 1.188 1.187h4.67l-4.354 4.354c-.475.475-.475 1.187 0 1.662.238.238.554.317.871.317s.633-.079.871-.317l4.353-4.353v4.67a1.22 1.22 0 0 0 1.188 1.187 1.22 1.22 0 0 0 1.187-1.187v-7.045l7.125-7.124v3.799l-3.721 3.642c-.475.474-.475 1.187 0 1.662.238.237.554.316.871.316s.633-.079.871-.316l1.979-1.979v3.72l-4.987 4.987c-.475.475-.475 1.188 0 1.663.237.237.554.316.87.316s.634-.079.871-.316l3.325-3.325v5.462a1.22 1.22 0 0 0 1.187 1.187 1.22 1.22 0 0 0 1.188-1.187v-5.462l3.324 3.325c.238.237.554.316.871.316s.633-.079.871-.316c.475-.475.475-1.188 0-1.663l-4.987-4.987v-3.72l1.979 1.979c.237.237.554.316.87.316s.634-.079.871-.316c.475-.475.475-1.188 0-1.662l-3.641-3.642v-3.799l7.124 7.124v7.045a1.22 1.22 0 0 0 1.188 1.187 1.22 1.22 0 0 0 1.187-1.187v-4.67l4.354 4.353c.237.238.554.317.87.317s.634-.079.871-.317c.475-.475.475-1.187 0-1.662l-4.354-4.354h4.671a1.22 1.22 0 0 0 1.187-1.187 1.22 1.22 0 0 0-1.187-1.187H35.12l-7.125-7.125h3.8l3.641 3.642c.238.237.554.316.871.316s.633-.079.871-.316c.475-.475.475-1.188 0-1.663l-1.979-1.979h3.72l4.987 4.987c.238.238.554.317.871.317s.633-.079.871-.317c.475-.475.475-1.187 0-1.662l-3.325-3.325h5.462a1.22 1.22 0 0 0 1.188-1.187c0-.633-1.03-1.188-1.663-1.188"/>
          </svg>
        `;
      ]]]

icon_humidifier:
  styles:
    custom_fields:
      icon:
        - width: 77%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : 'off';
        return `
          <svg viewBox="0 0 50 50">
            <style>
              .line {
                stroke: var(--state-icon-color);
                stroke-width: 2;
                stroke-linejoin: round;
              }
              .indicator {
                stroke-width: 1; 
                stroke-linejoin: round; 
                stroke: #555E63; 
                fill: var(--state-icon-color);
              }
              .on.indicator {
                fill: var(--state-icon-active-color);
                stroke: var(--state-icon-active-color); 
              }
              .on.wavy {
                animation: dash 2s linear forwards infinite;
              }
              @keyframes dash {
                to {
                  stroke-dashoffset: 0;
                  opacity: 0%;
                }
              }
            </style>

            <g transform="matrix(2.023634, 0, 0, -2.023634, -3.485678, 41.014881)">
              <path class="line" fill="var(--state-icon-color)" d="M 22.265 -2.792 L 5.765 -2.792 C 4.109 -2.792 2.765 -1.449 2.765 0.208 L 2.765 4.708 C 2.765 6.365 4.109 7.708 5.765 7.708 L 22.265 7.708 C 23.922 7.708 25.265 6.365 25.265 4.708 L 25.265 0.208 C 25.265 -1.449 23.922 -2.792 22.265 -2.792 Z"/>
              <path class="indicator ${state}" fill="var(--state-icon-color)" d="M 6.339 6.966 L 6.339 5.943 C 6.339 5.67 6.487 5.411 6.748 5.219 C 7.01 5.026 7.365 4.919 7.734 4.919 L 20.29 4.919 C 20.659 4.919 21.014 5.026 21.276 5.219 C 21.539 5.411 21.684 5.67 21.684 5.943 L 21.684 6.966"/>
              <path class="line wavy ${state}" fill="none" stroke-dasharray="9.4" stroke-dashoffset="9.4" d="M 5.894 18.943 C 6.457 18.38 6.773 17.617 6.773 16.822 C 6.773 16.026 6.457 15.263 5.894 14.701 C 5.616 14.422 5.395 14.092 5.244 13.728 C 5.093 13.364 5.015 12.973 5.015 12.579 C 5.015 12.185 5.093 11.795 5.244 11.431 C 5.389 11.082 5.598 10.763 5.861 10.491" fill: none;" transform="matrix(-1, 0, 0, -1, 11.788, 29.434001)"/>
              <path class="line wavy ${state}" fill="none" stroke-dasharray="9.4" stroke-dashoffset="9.4" d="M 13.894 18.943 C 14.457 18.38 14.773 17.617 14.773 16.822 C 14.773 16.026 14.457 15.263 13.894 14.701 C 13.616 14.422 13.395 14.092 13.244 13.728 C 13.093 13.364 13.015 12.973 13.015 12.579 C 13.015 12.185 13.093 11.795 13.244 11.431 C 13.389 11.082 13.598 10.763 13.861 10.492" transform="matrix(-1, 0, 0, -1, 27.788, 29.435)"/>
              <path class="line wavy ${state}" fill="none" stroke-dasharray="9.4" stroke-dashoffset="9.4" d="M 21.894 18.943 C 22.457 18.38 22.773 17.617 22.773 16.822 C 22.773 16.026 22.457 15.263 21.894 14.701 C 21.616 14.422 21.395 14.092 21.244 13.728 C 21.093 13.363 21.015 12.973 21.015 12.579 C 21.015 12.185 21.093 11.795 21.244 11.431 C 21.39 11.077 21.603 10.755 21.871 10.481" transform="matrix(-1, 0, 0, -1, 43.788, 29.424001)"/>
            </g>
          </svg>
        `;
      ]]]

icon_closet:
  styles:
    custom_fields:
      icon:
        - width: 80%
        - margin-left: -16%
  custom_fields:
    icon: >
      [[[
        let room = `d="M11.4,1.4h27.2v43.1H11.4V1.4z" fill="#bcbcbc"`,
          door = `d="M11.4 1.4v43.1h27.2V1.4H11.4zm23 23.4c0 1.1-.9 1.9-1.9 1.9h0c-1.1 0-1.9-.9-1.9-1.9V21c0-1.1.9-1.9 1.9-1.9h0c1.1 0 1.9.9 1.9 1.9v3.8z"`;

        if (variables.state_on && variables.timeout < 2000) {
          return `
            <style>
              .state {
                animation: state 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              .opacity {
                animation: opacity 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              @keyframes state {
                0% {
                  transform: none;
                  fill: var(--state-icon-color);
                }
                100% {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              }
              @keyframes opacity {
                0% {
                  opacity: 0;
                }
                100% {
                  opacity: 1;
                }
              }
            </style>
            <svg viewBox="0 0 50 50">
              <path class="opacity" ${room}/>
              <path class="state" ${door}/>
            </svg>
          `;
        }

        if (variables.state_on && variables.timeout > 2000) {
          return `
            <svg viewBox="0 0 50 50">
              <style>
                .state_timeout_on {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              </style>
              <path ${room}/>
              <path class="state_timeout_on" ${door}/>
            </svg>
          `;
        }

        return variables.state === 'off' && variables.timeout < 2000 ? `
          <style>
            .state {
              animation: state 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            }
            .opacity {
              animation: opacity 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            }
            .reverse {
              animation-direction: reverse;
            }
            @keyframes state {
              0% {
                transform: none;
                fill: var(--state-icon-color);
              }
              100% {
                transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                fill: #b68349;
              }
            }
            @keyframes opacity {
              0% {
                opacity: 0;
              }
              100% {
                opacity: 1;
              }
            }
          </style>
          <svg viewBox="0 0 50 50">
            <path class="opacity reverse" ${room}/>
            <path class="state reverse" ${door}/>
          </svg>
        ` : `
          <svg viewBox="0 0 50 50">
            <style>
              .state_timeout_off {
                fill: var(--state-icon-color);
              }
            </style>
            <path class="state_timeout_off" ${door}/>
          </svg>
        `;
      ]]]

icon_away:
  state_display: Auto
  styles:
    card:
      - transition: all 0.3s ease-out
    custom_fields:
      icon:
        - width: 79%
        - margin-left: -1%
        - margin-top: -1%
        - fill: >
            [[[ return variables.state_on ? '#516d82' : 'var(--state-icon-color)'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                10%,
                20%,
                100% {
                  transform: rotateZ(0deg);
                }
                30%,
                50%,
                70% {
                  transform: rotateZ(7deg);
                }
                90% {
                  transform: rotateZ(3deg);
                }
                40%,
                60%,
                80% {
                  transform: rotateZ(-7deg);
                }
              }
              .on {
                animation: on 1.35s cubic-bezier(0.5, 1, 0.89, 1);
                animation-fill-mode: both;
                transform-origin: 70% 80%;
                animation-delay: 0s;
              }
            </style>
            <path class="${state}" d="M32.1 18.4s.3-1.6.7-2.1c.3-.6.9-1.4 1.6-1.8.6-.4 1.1-.7 1.4-.7s.7-.1 1 .1.6.4.8 1.3l.3 2.7.1 2.4.2 4.1c0 .3.2 3.1.2 3.3s.2 2.7.2 3.2l-.1 2.5c.1 1.6.5 3.1-.2 4.6-.6 1.4-1.7 2.7-2.9 3.6-.5.4-1.9 1.3-2.9 1.7-1.1.5-2.2.8-3.3 1.1-.5.1-1.4.4-2.3.3s-1.8-.6-2.1-1l-1.6-2.3c-.6-.8-2.1-2.3-2.3-2.5l-2.7-2.8c-.2-.2-2.7-3.5-2.9-3.8l-3.1-4.7-1.8-3.2-1.5-2.8-.9-1.8c-.1-.2-.3-1.1-.2-1.4.3-1.2 1.4-1.4 2.3-.7.3.2.9 1 1.1 1.3s6.1 8.1 6.1 8.1c.2.3.7.3.9 0s-.1-.7-.2-.9c-.4-.6-8.3-11.5-8.3-11.5s-.6-.9-.7-1.1c-.3-1.1 0-2.3 1.1-2.7s1.9.3 2.6 1.1c.3.3 8.3 11.5 8.3 11.5.2.2.3.3.5.3.3 0 .5-.4.4-.7-.1-.2-.5-.9-.5-.9L11.8 9c-.6-1-.9-2-.1-3 .7-.8 2.2-1.3 3-.2.3.3 10.1 14.3 10.1 14.3.2.2.5.4.7.3.5-.1.3-.7.1-1-.1-.2-8.4-11.8-8.4-11.8-.4-.9-.6-2 .2-2.8 1-1.1 2.5-.5 3.3.5.2.3 1 1.4 1 1.4l2.7 3.7c.1.2 3.4 4.4 3.8 4.8.9 1.1 1.8 2.2 2.7 3.2l.5.5c.1.1.1.4.1.8 0 1.3.1 2.6.1 3.9 0 .2.1.4.2.6.3.3.6.1.7-.2.1-.2 0-2.4 0-2.7-.3-.3-.5-1.3-.4-2.9zM12.2 46.9s-2.8-.8-4.8-2.7-2.6-2.7-2.8-3-1.8-3-2-3.6c-.2-.5-.2-.7.2-1 .4-.4 1-.5 1.3.1.1.2.4 1 .5 1.2s1 1.9 1.7 2.8 1.6 2.2 4.4 3.8c.6.3 1.2.6 1.9.9.3.1.6.2.8.4.1.2.1.6-.1.8-.2.4-.7.4-1.1.3zM7.1 30.7l.9 3.1c.3.7 1.1 2.3 1.9 3.3s2.4 2.6 3.4 3.2 2 1.1 3 1.5c1 .3 1.1.4 1.2.5.3.4.2 1.2-.4 1.3-.2 0-1.2 0-1.8-.3L12 41.7c-.5-.4-3.9-3.1-5.1-6S5.3 31 5.2 30.4s-.2-1.1 0-1.4c.3-.4.9-.8 1.3-.3.2.3.3.6.3.9.1 0 .2.8.3 1.1zm26.8-25s.2-.1.5-.1.8.3 1.4.7 1.9 1 3.6 2.9 2.9 3.9 3.4 5.8c.5 1.8.8 3.1.9 5.5 0 .5.1 1.6 0 1.7-.2.5-.5.7-1 .7-.6 0-.7-.5-.7-1l-.1-2.9c-.1-.6-.3-1.9-.7-2.9-.3-1-.7-2.3-1.7-3.6-.9-1.3-2.1-2.8-3.2-3.5l-2.4-1.5c-.6-.6-.7-1.2 0-1.8zm4.9-2.5s.3-.2.5-.1c.2 0 .7.3.9.4s2.1 1.3 3.6 3c1.5 1.6 3.5 5.1 3.7 7.4.1.4.2.9 0 1-.2.2-.4.4-.7.4-.2 0-.5 0-.7-.1-.1-.2-.4-1.1-.4-1.3s-.6-2-1.1-3.1C44 9.7 43.5 8.5 42 7.1s-2.2-1.9-2.8-2.2-1.1-.6-1.1-1c.1-.3.3-.6.7-.7z"/>
          </svg>
        `;
      ]]]

icon_home:
  styles:
    card:
      - transition: all 0.3s ease-out
    custom_fields:
      icon:
        - width: 72%
        - margin-left: -1%
        - fill: >
            [[[ return variables.state_on ? '#c7983e' : 'var(--state-icon-color)'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                from,
                20%,
                40%,
                60%,
                80%,
                to {
                  animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
                }
                0% {
                  transform: scale(0.3);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.9);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                to {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 1s;
                transform-origin: center;
              }
            </style>
            <path class="${state}" d="M42.2 28.3c0-.8-.2-1-.2-1L26 12.1s-.5-.4-1-.4-1 .3-1 .3L8.2 27.1c-.4.5-.4.9-.4.9v18.3c0 1.1.9 2 1.9 2h8.2a1.47 1.47 0 0 0 1.5-1.5v-14a1.47 1.47 0 0 1 1.5-1.5h8.4a1.47 1.47 0 0 1 1.5 1.5v14a1.47 1.47 0 0 0 1.5 1.5h8.2c1.1 0 2-.9 2-1.9 0-.2-.3-18.1-.3-18.1zM7.3 25l-1.6 1.5s-.3.3-.5.3-.5 0-.8-.2c-.2-.2-2-2.8-2-2.8s-.1-.4-.1-.7c.1-.3.2-.7.3-.8.4-.1 21.5-20.1 21.5-20.1s.4-.3.9-.3c.4 0 .8.1.9.2s.5.4.5.4l8.9 8.5V6s.1-.4.2-.7c.1-.2.3-.3.4-.3s.3-.1.3-.1h3s.3.1.4.3a1.08 1.08 0 0 1 .3.7v9.8l7.2 6.9s.2.3.3.4c.1.2.1.7.1.7 0 .1-.1.4-.2.5s-1.6 2.5-1.6 2.5-.1.3-.3.3c-.2.1-.4.1-.7 0-.2-.1-.5-.4-.5-.4L26.4 9.4s-.3-.3-.5-.4-.4-.2-.8-.2-.5.1-.8.1c-.1.1-.4.3-.7.5C23.3 9.8 7.3 25 7.3 25z"/>
          </svg>
        `;
      ]]]

icon_ledstripe:
  styles:
    custom_fields:
      icon:
        - width: 80%
        - margin-left: -14%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 1000 1000">
            <g transform="matrix(0.9132 0 0 0.5374 160.0803 150.5775)" id="302336">
              <path style="stroke: rgb(0,153,255); stroke-width: 5; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill: none; fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-46.5001, -78.5)" d="M 2.6167 78.5 C 2.6167 57.2341 7.7391 38.064 15.8764 24.2946 C 24.0482 10.4665 34.9664 2.5 46.5001 2.5 C 58.0338 2.5 68.952 10.4665 77.1238 24.2946 C 85.2611 38.064 90.3835 57.2341 90.3835 78.5 C 90.3835 99.7659 85.2611 118.936 77.1238 132.705 C 68.952 146.533 58.0338 154.5 46.5001 154.5 C 34.9664 154.5 24.0482 146.533 15.8764 132.705 C 7.7391 118.936 2.6167 99.7659 2.6167 78.5 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 836.6667 816.6667)" id="673002">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 643.3333 816.6667)" id="692091">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 465 816.6667)" id="373587">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 273.3333 816.6667)" id="920015">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none;  fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 236.6667 553.3333)" id="706203">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none;  fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 418.3333 515)" id="750381">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none;  fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 796.6667 433.3333)" id="600502">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none;  fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 591.6667 480)" id="976047">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none;  fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 170 150.579)" id="17941">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none;  fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 350 150.579)" id="609102">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 550 150.579)" id="951104">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none;  fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(1 0 0 1 731.6667 150.579)" id="14399">
              <path class="light-color" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none;  fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-67.5, -67.5)" d="M 67.5 135 C 104.779 135 135 104.779 135 67.5 C 135 30.2208 104.779 0 67.5 0 C 30.2208 0 0 30.2208 0 67.5 C 0 104.779 30.2208 135 67.5 135 Z" stroke-linecap="round"/>
              </g>
              <g transform="matrix(50.5051 0 0 50.5051 500.0004 491.3674)" id="361987">
              <path style="stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill: var(--state-icon-color); fill-rule: nonzero; opacity: 1;" vector-effect="non-scaling-stroke" transform=" translate(-12, -12)" d="M 6.33 12.5 c 0.41 -0.09 0.8 0.17 0.89 0.58 c 0.09 0.4 -0.17 0.8 -0.57 0.89 c -0.41 0.09 -0.8 -0.17 -0.89 -0.57 C 5.67 12.99 5.93 12.59 6.33 12.5 M 10 11.71 c 0.4 -0.09 0.8 0.17 0.89 0.57 c 0.09 0.41 -0.17 0.8 -0.57 0.89 C 9.91 13.26 9.51 13 9.42 12.6 C 9.33 12.2 9.59 11.8 10 11.71 M 13.66 10.92 c 0.41 -0.09 0.8 0.17 0.89 0.57 c 0.09 0.41 -0.17 0.8 -0.57 0.89 c -0.4 0.09 -0.8 -0.17 -0.89 -0.57 C 13 11.4 13.25 11 13.66 10.92 M 17.32 10.12 c 0.41 -0.09 0.8 0.17 0.89 0.57 c 0.09 0.4 -0.17 0.8 -0.57 0.89 c -0.41 0.09 -0.8 -0.17 -0.89 -0.57 C 16.66 10.61 16.92 10.21 17.32 10.12 M 8 15.48 l 11.1 -2.4 c 0.81 -0.17 1.32 -0.97 1.15 -1.78 c -0.42 -1.94 -2.33 -3.17 -4.26 -2.75 L 4.89 10.95 c -0.81 0.18 -1.32 0.97 -1.15 1.78 C 4.16 14.66 6.07 15.9 8 15.48 M 18.75 19.5 c -0.41 0 -0.75 -0.34 -0.75 -0.75 S 18.34 18 18.75 18 s 0.75 0.34 0.75 0.75 S 19.16 19.5 18.75 19.5 M 15 19.5 c -0.41 0 -0.75 -0.34 -0.75 -0.75 S 14.59 18 15 18 s 0.75 0.34 0.75 0.75 S 15.41 19.5 15 19.5 M 11.25 19.5 c -0.41 0 -0.75 -0.34 -0.75 -0.75 S 10.84 18 11.25 18 S 12 18.34 12 18.75 S 11.66 19.5 11.25 19.5 M 7.5 19.5 c -0.41 0 -0.75 -0.34 -0.75 -0.75 S 7.09 18 7.5 18 s 0.75 0.34 0.75 0.75 S 7.91 19.5 7.5 19.5 M 20.25 16.5 H 6.75 c -3 0 -3.75 -2.25 -3.75 -3 v 3.75 C 3 19.32 4.68 21 6.75 21 h 13.5 c 0.41 0 0.75 -0.34 0.75 -0.75 v -3 C 21 16.84 20.66 16.5 20.25 16.5 M 16.5 6 c -0.41 0 -0.75 -0.34 -0.75 -0.75 S 16.09 4.5 16.5 4.5 s 0.75 0.34 0.75 0.75 S 16.91 6 16.5 6 M 12.75 6 C 12.34 6 12 5.66 12 5.25 s 0.34 -0.75 0.75 -0.75 s 0.75 0.34 0.75 0.75 S 13.16 6 12.75 6 M 9 6 C 8.59 6 8.25 5.66 8.25 5.25 S 8.59 4.5 9 4.5 s 0.75 0.34 0.75 0.75 S 9.41 6 9 6 M 5.25 6 C 4.84 6 4.5 5.66 4.5 5.25 S 4.84 4.5 5.25 4.5 S 6 4.84 6 5.25 S 5.66 6 5.25 6 M 17.25 3 H 3.75 C 3.34 3 3 3.34 3 3.75 v 3 C 3 7.16 3.34 7.5 3.75 7.5 h 13.5 c 3 0 3.75 2.25 3.75 3 V 6.75 C 21 4.68 19.32 3 17.25 3" stroke-linecap="round"/>
              </g>
          </svg>
        `;
      ]]]

icon_washer:
  styles:
    custom_fields:
      icon:
        - width: 69%
  custom_fields:
    icon: >
      [[[
        let state = variables.state === 'on' ? 'on' : null;
        return `
          <svg stroke-miterlimit="10" style="fill-rule:nonzero;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round" viewBox="0 0 227 280" xmlns="http://www.w3.org/2000/svg" xmlns:vectornator="http://vectornator.io" xmlns:xlink="http://www.w3.org/1999/xlink">
            <defs><filter color-interpolation-filters="sRGB" filterUnits="userSpaceOnUse" height="3.69297" id="Filter" width="3.69297" x="-20.7744" y="79.2153"><feDropShadow dx="0" dy="0" flood-color="#000" flood-opacity="1" in="SourceGraphic" result="Shadow" stdDeviation=".436047"/></filter></defs><clipPath id="ArtboardFrame"><path d="M0 0h227v280H0z"/></clipPath><g clip-path="url(#ArtboardFrame)" id="Layer-1" vectornator:layerName="Layer 1">
            <path  d="M8.5192 2.79797H218.612C222.039 2.79797 224.817 5.57577 224.817 9.00235V271.643C224.817 275.069 222.039 277.847 218.612 277.847H8.5192C5.09262 277.847 2.31482 275.069 2.31482 271.643V9.00235C2.31482 5.57577 5.09262 2.79797 8.5192 2.79797z" fill="#b1b8c2" fill-rule="evenodd" opacity="1" stroke="#b1b8c2" stroke-linecap="round" stroke-linejoin="round" stroke-width="4.64376"/>
            <path  d="M5.2297 2.31745H221.902C223.514 2.31745 224.82 3.62359 224.82 5.2348V41.3985C224.82 43.0097 223.514 44.3158 221.902 44.3158H5.2297C3.61849 44.3158 2.31235 43.0097 2.31235 41.3985V5.2348C2.31235 3.62359 3.61849 2.31745 5.2297 2.31745z" fill="#cfd3da" fill-rule="evenodd" opacity="1" stroke="#cfd3da" stroke-linecap="round" stroke-linejoin="round" stroke-width="4.64376"/><g opacity="1">
            <path d="M37.3401 156.01C37.3401 112.729 71.4675 77.6429 113.566 77.6429 155.664 77.6429 189.792 112.729 189.792 156.01 189.792 199.292 155.664 234.378 113.566 234.378 71.4675 234.378 37.3401 199.292 37.3401 156.01z" fill="#4e535b" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path class="${state}" d="M38.0196 163.199C38.0196 163.199 45.9209 239.314 121.929 231.548 188.749 224.72 189.828 156.507 189.828 156.507 189.828 156.507 191.222 166.755 177.549 166.859 163.877 166.963 127.652 138.681 132.629 157.456 143.21 197.374 62.2382 141.677 69.5511 166.918 72.8139 178.181 62.7572 184.947 49.316 173.043" fill="#649cf4" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M40.7212 156.01C40.7212 114.897 73.3348 81.5686 113.566 81.5686 153.797 81.5686 186.41 114.897 186.41 156.01 186.41 197.123 153.797 230.452 113.566 230.452 73.3348 230.452 40.7212 197.123 40.7212 156.01z" fill="none" fill-rule="evenodd" opacity="1" stroke="#d9d9d9" stroke-linecap="round" stroke-linejoin="round" stroke-width="10"/></g>
            <path d="M11.5454 23.0124C11.5454 16.5169 16.6548 11.2512 22.9575 11.2512 29.2602 11.2512 34.3695 16.5169 34.3695 23.0124 34.3695 29.5079 29.2602 34.7735 22.9575 34.7735 16.6548 34.7735 11.5454 29.5079 11.5454 23.0124z" fill="#e1e1e1" fill-rule="evenodd" opacity="1" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.34137"/>
            <path d="M22.9135 11.7924 22.8822 17.9182" fill="#ff2323" fill-rule="evenodd" opacity="1" stroke="#ff2323" stroke-linecap="butt" stroke-linejoin="bevel" stroke-width="1.94879"/>
            <path d="M-18.9279 81.0618" fill="#ff2323" fill-rule="evenodd" filter="url(#Filter)" stroke="#ff2323" stroke-linecap="butt" stroke-linejoin="bevel" stroke-width="1.94879" vectornator:shadowAngle="1.5708" vectornator:shadowColor="#000000" vectornator:shadowOffset="0" vectornator:shadowOpacity="1" vectornator:shadowRadius=".872093"/>
            <path d="M99.1859 14.9785C99.1859 12.7655 100.888 10.9716 102.987 10.9716 105.086 10.9716 106.787 12.7655 106.787 14.9785 106.787 17.1915 105.086 18.9855 102.987 18.9855 100.888 18.9855 99.1859 17.1915 99.1859 14.9785z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M99.1859 14.9785C99.1859 12.7655 100.888 10.9716 102.987 10.9716 105.086 10.9716 106.787 12.7655 106.787 14.9785 106.787 17.1915 105.086 18.9855 102.987 18.9855 100.888 18.9855 99.1859 17.1915 99.1859 14.9785z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M99.1859 14.9785C99.1859 12.7655 100.888 10.9716 102.987 10.9716 105.086 10.9716 106.787 12.7655 106.787 14.9785 106.787 17.1915 105.086 18.9855 102.987 18.9855 100.888 18.9855 99.1859 17.1915 99.1859 14.9785z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M99.1859 14.9785C99.1859 12.7655 100.888 10.9716 102.987 10.9716 105.086 10.9716 106.787 12.7655 106.787 14.9785 106.787 17.1915 105.086 18.9855 102.987 18.9855 100.888 18.9855 99.1859 17.1915 99.1859 14.9785z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M113.875 31.6548C113.875 29.4418 115.576 27.6478 117.676 27.6478 119.775 27.6478 121.476 29.4418 121.476 31.6548 121.476 33.8677 119.775 35.6617 117.676 35.6617 115.576 35.6617 113.875 33.8677 113.875 31.6548z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M99.4787 31.5956C99.4787 29.3826 101.18 27.5886 103.279 27.5886 105.378 27.5886 107.08 29.3826 107.08 31.5956 107.08 33.8086 105.378 35.6025 103.279 35.6025 101.18 35.6025 99.4787 33.8086 99.4787 31.5956z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M113.901 15.0871C113.901 12.8741 115.602 11.0801 117.701 11.0801 119.801 11.0801 121.502 12.8741 121.502 15.0871 121.502 17.3 119.801 19.094 117.701 19.094 115.602 19.094 113.901 17.3 113.901 15.0871z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M0 41.7831H227.139V47.4172H0V41.7831z" fill="#7b7b7b" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M39.3936 23.0124C39.3936 16.5169 44.5029 11.2512 50.8056 11.2512 57.1084 11.2512 62.2177 16.5169 62.2177 23.0124 62.2177 29.5079 57.1084 34.7735 50.8056 34.7735 44.5029 34.7735 39.3936 29.5079 39.3936 23.0124z" fill="#e1e1e1" fill-rule="evenodd" opacity="1" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.34137"/>
            <path d="M50.7616 11.7924 50.7304 17.9182" fill="#ff2323" fill-rule="evenodd" opacity="1" stroke="#ff2323" stroke-linecap="butt" stroke-linejoin="bevel" stroke-width="1.94879"/>
            <path d="M80.6738.0204403H86.6971V45.1208H80.6738V.0204403z" fill="#7b7b7b" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M128.221 31.6548C128.221 29.4418 129.923 27.6478 132.022 27.6478 134.121 27.6478 135.822 29.4418 135.822 31.6548 135.822 33.8677 134.121 35.6617 132.022 35.6617 129.923 35.6617 128.221 33.8677 128.221 31.6548z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M128.247 15.0871C128.247 12.8741 129.949 11.0801 132.048 11.0801 134.147 11.0801 135.848 12.8741 135.848 15.0871 135.848 17.3 134.147 19.094 132.048 19.094 129.949 19.094 128.247 17.3 128.247 15.0871z" fill="#6d99ff" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M151.705-.0248276H157.728V45.5953H151.705V-.0248276z" fill="#7b7b7b" fill-rule="evenodd" opacity="1" stroke="none"/><path d="M168.619 7.75546H215.104V34.7004H168.619V7.75546z" fill="#323232" fill-rule="evenodd" opacity="1" stroke="#323232" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.94879"/>
            <path d="M195.463 16.1956v4m0 2v4m5-10v4m0 2v4M197.063 15.1956H198.863M197.063 21.1956H198.863M197.063 27.1956H198.863" fill="none" fill-rule="evenodd" opacity="1" stroke="#a1c900" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
            <path d="M204.463 16.1956v4m0 2v4m5-10v4m0 2v4M206.063 15.1956H207.863M206.063 21.1956H207.863M206.063 27.1956H207.863" fill="none" fill-rule="evenodd" opacity="1" stroke="#a1c900" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
            <path d="M174.26 16.2603v4m0 2v4m5-10v4m0 2v4M175.86 15.2603H177.66M175.86 21.2603H177.66M175.86 27.2603H177.66" fill="none" fill-rule="evenodd" opacity="1" stroke="#a1c900" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
            <path d="M183.26 16.2603v4m0 2v4m5-10v4m0 2v4M184.86 15.2603H186.66M184.86 21.2603H186.66M184.86 27.2603H186.66" fill="none" fill-rule="evenodd" opacity="1" stroke="#a1c900" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
            <path d="M190.629 17.8913C190.629 17.2176 191.181 16.6714 191.861 16.6714 192.542 16.6714 193.093 17.2176 193.093 17.8913 193.093 18.5651 192.542 19.1113 191.861 19.1113 191.181 19.1113 190.629 18.5651 190.629 17.8913z" fill="#a1c900" fill-rule="evenodd" opacity="1" stroke="none"/>
            <path d="M190.714 24.1187C190.714 23.4651 191.228 22.9352 191.861 22.9352 192.495 22.9352 193.008 23.4651 193.008 24.1187 193.008 24.7724 192.495 25.3023 191.861 25.3023 191.228 25.3023 190.714 24.7724 190.714 24.1187z" fill="#a1c900" fill-rule="evenodd" opacity="1" stroke="none"/></g>
            <style>
              @keyframes on {
                0% {
                  visibility: visible;
                  transform: rotate(0deg) translateZ(0);
                }
                100% {
                  transform: rotate(1080deg) translateZ(0);
                }
              }
              @keyframes off {
                0% {
                  transform: rotate(0deg) ;
                }
                100% {
                  transform: rotate(360deg) ;
                }
              }
              
              .on {
                transform-origin: 113px 162px;
                animation: on 3s  infinite;
                animation-fill-mode: both;   
                animation-delay: 0s;                  
              }
            </style>
              
          </svg>
        `;
      ]]]
